def props = new Properties()
file("src/main/resources/application.properties").withInputStream { 
    stream -> props.load(stream) 
}

buildscript {
    repositories {   
    	mavenLocal()
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.4.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven'

archivesBaseName = props['info.app.name']
version = props['info.app.version']
group = 'com.github.jm-lab'

repositories {
	mavenLocal()
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'deploy'
       }
    }
}

dependencies {
//  실제 적용시에는 아래 의존성만 사용하면 됨
//	compile ('com.github.jm-lab:jm-spring-boot-init:1.3.4')
//  jetty 를 사용하려면 아래 주석 해제
//	{
//		exclude module: "spring-boot-starter-tomcat"
//	}
//	compile("org.springframework.boot:spring-boot-starter-jetty")

	compile 'kr.jmlab:jmlab-utils-java8:0.1.82'
    compile 'org.projectlombok:lombok:1.16.8'
    compile("org.springframework.boot:spring-boot-starter-web:1.3.4.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-actuator:1.3.4.RELEASE")
    compile("org.jolokia:jolokia-core:1.3.3")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.3.4.RELEASE")
}